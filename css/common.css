/* COMMON */
body {
  color: #333;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.4; /*-- 줄높이 --*/
  font-family: 'Nanum Gothic', sans-serif;
}
img {
  display: block; /* 인라인(글자)요소는 BaseLine이 존재해서 xyzg y,g의 끝 부븐 에 BaseLine이 존재해서 
  img는 인라인 요소이기 때문에 밑에 조금 여백이 생긴다 Block으로 블록요소로 바꾸어주어 여백을 없앤다*/
}
a {
  text-decoration: none;
}
.inner { /* inner란 요소를 가운데로 몰아주는 역할을 한다.*/
  width: 1100px;
  margin: 0 auto;
  position: relative; /* inner라는 클래스를 가진 모든 요소는 relative를 가짐으로 따로 추가할 필요가 없다 참고*/
}
.btn {
  width: 130px;
  padding: 10px;
  border: 2px solid #333;
  border-radius: 4px;
  color: #333;
  font-size: 16px;
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  box-sizing: border-box;
  display: block;
  transition: .4s;
}
.btn:hover {
  background-color: #333;
  color: #fff;
}
.btn.btn--reverse { /* 이런경우 JS로 ClassList 클래스 추가시 여러가지 것을 만들 수있다 선택자 우선순위에 따라서*/
  background-color: #333;
  color: #fff;
}
.btn.btn--reverse:hover {
  background-color: transparent; /* 투명은 transparent */
  color: #333;
}
.btn.btn--brown {
  color: #592B18;
  border-color: #592B18;
}
.btn.btn.btn--brown:hover {
  color: #FFF;
  background-color: #592B18;
}
.btn.btn--gold {
  color: #D9AA8A;
  border-color: #D9AA8A;
}
.btn.btn--gold:hover {
  color: #FFF;
  background-color: #D9AA8A;
}
.btn.btn--white {
  color: #FFF;
  border-color: #FFF;
}
.btn.btn--gold:hover {
  color: #333;
  background-color: #FFF;
}
/* 아래 설명*/
/* 화면에 안보이다가 JS작업을 통해서 .show가 보이면 <!!!!.show가 붙은 후손 선택자들만!!!> 다시 투명도 1이 되고 오/왼쪽이든 원래자리에서 안보이게 이동한다 */
.back-to-position {
  opacity: 0;
  transition: 1s; 
}
.back-to-position.to-right { /* 왼쪽에서 오른쪽으로 나타나는 에니메이션 */
  transform: translateX(-150px);
}
.back-to-position.to-left {  /* 오른쪽에서 왼쪽으로 나타나는 에니메이션 */
  transform: translateX(150px);
}
.show .back-to-position {
  opacity: 1;
  transform: translateX(0); /* 원래의 위치 로 돌아옴 */
}
.show .back-to-position.delay-0 {
  transition-delay: 0s; /* 기본값이 0이지만 명시적으로 지정 */
}
.show .back-to-position.delay-1 {
  transition-delay: .3s;
}
.show .back-to-position.delay-2 {
  transition-delay: .6s;
}
.show .back-to-position.delay-3 {
  transition-delay: .9s;
}

/* HEADER */
header { /* !!!!블록요소는 가로넓이가 최대한 늘어날려고 하지만 만약 position값이 fixed와 absolute일경우 최소한으로 줄어든다 !!!! */
  width: 100%; /* 100%로 했을시 fixed나 absolute여도 가로너비가 늘어난다 */
  /* position: relative; 부모기준으로 해야하지만 fixed역시 기준이 될 수 있다. */
  background-color: #f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  position: fixed; /* fixed일경우 당연히 ViewPort를 기준으로 하기때문에 가로를 최소한으로 사용할려고한다 */
  top: 0;
  z-index: 9;
}
header > .inner { 
  height: 120px;
}
header .logo {
  height: 75px;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  margin: auto;
}
header .sub-menu {
  position: absolute;
  top: 10px;
  right: 0;
  display: flex;
}
header .sub-menu ul.menu {
  font-family: Arial, sans-serif;
  display: flex;
}
header .sub-menu ul.menu li {
  position: relative;
}
header .sub-menu ul.menu li::before {
  content: "";
  display: block; /* position이 absolute로 되어있어서 block을 지워도 되고 그냥 명시해도 된다. */
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
}
header .sub-menu ul.menu li:first-child::before {
  display: none;
}
header .sub-menu ul.menu li a {
  font-size: 12px;
  padding: 11px 16px;
  display: block;
  color: #656565;
}
header .sub-menu ul.menu li a:hover {
  color: #000;
}
header .sub-menu .search {
  height: 34px;
  position: relative;
}
header .sub-menu .search input {
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  border-radius: 5px;
  outline: none;
  background-color: #fff;
  color: #777;
  font-size: 12px;
  transition: width .4s;
}
header .sub-menu .search input:focus {
  width: 190px;
  border-color: #669900;
}
header .sub-menu .search .material-icons {
  height: 24px;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 5px;
  margin: auto;
  transition: .4s;
}
header .sub-menu .search.focused .material-icons {
  opacity: 0;
}
header .main-menu {
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1;
  display: flex;
}
header .main-menu .item {

}
header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}
header .main-menu .item:hover .item__name {
  background-color: #2c2a29;
  color: #669900;
  border-radius: 6px 6px 0 0;
}
header .main-menu .item .item__contents {
  width: 100%;
  position: fixed;
  left: 0;
  display: none;
}
header .main-menu .item:hover .item__contents {
  display: block;
}
header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
}
header .main-menu .item .item__contents .contents__menu > ul {
  display: flex;
  padding: 20px 0;
}
header .main-menu .item .item__contents .contents__menu > ul > li {
  width: 220px;
}
header .main-menu .item .item__contents .contents__menu > ul > li h4 {
  padding: 3px 0 12px 0;
  font-size: 14px;
  color: #fff;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999;
  cursor: pointer; /*마우스 포인터는 마우스커서가 손가락 모양을 하였을때를 의미*/
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover {
  color: #669900;
}
header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  font-size: 12px;
  background-image: url("../images/main_menu_pattern.jpg");
}
header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 700;  
}
header .main-menu .item .item__contents .contents__texture p {
  color: #669900;
  margin: 4px 0 14px;
}

/* badges */
header .badges {
  position: absolute;
  top: 132px;
  right: 12px;
}
header .badges .badge {
  border-radius: 10px;
  overflow: hidden;
  margin-bottom: 12px; /* 말그대로 아랬쪽 바깥여백 12px 만큼 만들기 */
  box-shadow: 4px 4px 10px rgba(0, 0, 0, .15); /* 그림자 그늘지게 만드는것 */
  cursor: pointer; /* 클라이언트가 마우스커서를 갔다 댔을시 손가락 모양으로 변경 */
}

/* FOOTER */
footer {
  background-color: #272727;
  border-top: 1px solid #333;
}
footer .inner {
  padding: 40px 0 60px 0;
}
footer .menu {
  display: flex;
  justify-content: center;
}
footer .menu li {
  position: relative;
}
footer .menu li::before { /* ::before 가상요소 선택자는 인라인 기억하자 !! 그래서 display:block을 추가해야하지만 포지션에 엡솔이기 떄문에 안해도된다.*/
  content: ""; /* 가상선택자는 무조건 있어야한다. */
  width: 3px;
  height: 3px;
  background-color: #555;
  position: absolute; /* 부모요소는 .menu가 아닌 ::before를 뺸 li 이다 햇갈리기 쉬움 조심!! */
  top: 0;
  bottom: 0;
  right:  -1px;
  margin: auto;
}
footer .menu li:last-child::before { /* li요소들 중에 가장 마지막 요소 가상요소 before */
  display: none;
}
footer .menu li a {
  color: #ccc;
  font-size: 12px;
  font-weight: 700;
  padding: 15px;
  display: block; /* 사용자가 누를수 있는 a 버튼의 영역을 넓혀주는 역할을한다 여기서는 */
}
footer .menu li a.green {
  color: #669900;
}
footer .btn-group {
  margin-top: 20px;
  display: flex;
  justify-content: center;
}
footer .btn-group .btn {
  font-size: 12px;
  margin-right: 10px;
}
footer .btn-group .btn:last-child {
  margin-right: 0;
}
footer .info {
  margin-top: 30px;
  text-align: center;
}
footer .info span {
  margin-right: 20px;
  color: #999;
  font-size: 12px;
}
footer .info span:last-child {
  margin-right: 0;
}
footer .copyright {
  color: #999;
  font-size: 12px;
  text-align: center;
  margin-top: 12px;
}
footer .logo { /* common에 img를 display: block;으로 지정을 해놨고 거기다 + margin: 0 auto; 인경우 width 가로너비 속성이 없어도 가운데 정렬이 가능하다. */
  margin: 30px auto 0;
}